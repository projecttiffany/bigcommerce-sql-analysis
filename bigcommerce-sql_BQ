-- What are the monthly and quarterly sales trends for Macbooks sold in North America across all years?
-- Across 2019-2022, Elist sold an average of 89 Macbooks to North American customers each quarter, with average quarterly sales of $143.5K. The average order price of these Macbooks was $1600.

SELECT 
  date_trunc(orders.purchase_ts, quarter) AS purchase_quarter, 
  geo_lookup.region,
  COUNT(DISTINCT orders.id) AS order_count, 
  ROUND(SUM(orders.usd_price), 2) AS total_sales,
  ROUND(AVG(orders.usd_price), 2) AS aov
FROM `elist-391320.elist.orders` AS orders
LEFT JOIN `elist-391320.elist.customers` AS customers
  ON orders.customer_id = customers.customer_id
LEFT JOIN `elist-391320.elist.geo_lookup` AS geo_lookup
  ON customers.country_code = geo_lookup.country
WHERE LOWER(orders.product_name) LIKE '%macbook%'
  AND country = 'NA'
GROUP BY 1, 2
ORDER BY 1 DESC, 2;


-- What was the monthly refund rate for purchases made in 2020? How many refunds did we have each month in 2021 for Apple products? 
-- refund rate is equal to the total number of refunds divided by the total number of orders 

SELECT 
    DATE_TRUNC(orders.purchase_ts, MONTH) AS month,
    SUM(CASE WHEN refund_ts IS NOT NULL THEN 1 ELSE 0 END) AS refunds,
    ROUND(SUM(CASE WHEN refund_ts IS NOT NULL THEN 1 ELSE 0 END) / COUNT(DISTINCT orders.id) * 100, 2) AS refund_rate_percent
FROM `elist-391320.elist.orders` AS orders
LEFT JOIN `elist-391320.elist.order_status` AS order_status
    ON orders.id = order_status.order_id
GROUP BY 1
ORDER BY 1;


-- Monthly refund rates of orders placed in 2020 ranged from 2-3%. In 2021, Apple products had 7 to 30 refunds per month, with the highest refunded-month being March 2021.
-- Number of refunds in 2021

SELECT 
    DATE_TRUNC(order_status.refund_ts, MONTH) AS month,
    SUM(CASE WHEN order_status.refund_ts IS NOT NULL THEN 1 ELSE 0 END) AS refunds
FROM `elist-391320.elist.orders` AS orders
LEFT JOIN `elist-391320.elist.order_status` AS order_status
    ON orders.id = order_status.order_id
WHERE EXTRACT(YEAR FROM order_status.refund_ts) = 2021
    AND LOWER(product_name) LIKE '%apple%'
GROUP BY 1
ORDER BY 1;


--calculate refund rate across products
--order in descending order of refund rate to get the top 3 frequently refunded

SELECT 
    CASE WHEN product_name = '27in"" 4k gaming monitor' THEN '27in 4K gaming monitor' ELSE product_name END AS product_clean,
    SUM(CASE WHEN refund_ts IS NOT NULL THEN 1 ELSE 0 END) AS refunds,
    ROUND(SUM(CASE WHEN refund_ts IS NOT NULL THEN 1 ELSE 0 END) / COUNT(DISTINCT orders.id) * 100, 2) AS refund_rate_percent
FROM `elist-391320.elist.orders` AS orders
LEFT JOIN `elist-391320.elist.order_status` AS order_status
    ON orders.id = order_status.order_id
GROUP BY 1
ORDER BY 3 DESC;

--order in descending order of refund count to get the top 3 highest refund count

SELECT case when product_name = '27in"" 4k gaming monitor' then '27in 4K gaming monitor' else product_name end as product_clean,
    SUM(case when refund_ts is not null then 1 else 0 end) as refunds,
    SUM(case when refund_ts is not null then 1 else 0 end)/count(distinct orders.id)*100 as refund_rate_percent
FROM `elist-391320.elist.orders` orders
LEFT JOIN `elist-391320.elist.order_status` order_status
    ON orders.id = order_status.order_id
GROUP BY 1
ORDER BY 2 desc;

-- The Macbook Air Laptop gets refunded the most at 4.2%, while the ThinkPad Laptop and Apple iPhone are the second and third most refunded items (3.8% and 3.5%). However, this does not mean they have the highest number of refunds - the Apple Airpod Headphones have the highest count of refunds, at 657 refunds across all years. The gaming monitor and Macbook Air have 395 and 118 refunds, respectively. 
-- aov and count of new customers by account creation channel in first 2 months of 2022

SELECT customers.account_creation_method,
  AVG(usd_price) AS aov,
  COUNT(DISTINCT customers.id) AS num_customers
FROM `elist-391320.elist.orders` orders
LEFT JOIN `elist-391320.elist.customers` customers
	ON orders.customer_id = customers.id
WHERE created_on BETWEEN '2022-01-01' AND '2022-02-28'
  AND customers.account_creation_method IS NOT NULL
GROUP BY 1
ORDER BY 3 DESC;

-- Desktop had by far the most amount of new customers created in the first two months of 2022, with 2.5K new customers compared to 701 new customers on mobile. Desktop-created accounts also make more expensive purchases, with an AOV of $236. This AOV is slightly lower than that of customers who created their account on tablets (AOV of $287), though there have only been 25 purchases made on tablets so far. 


--calculate days to purchase by taking date difference
--take the average of the number of days to purchasE

WITH days_to_purchase_cte AS (
    SELECT 
        customers.id AS customer_id, 
        orders.id AS order_id,
        customers.created_on,
        orders.purchase_ts, 
        DATE_DIFF(orders.purchase_ts, customers.created_on, DAY) AS days_to_purchase
    FROM `elist-391320.elist.customers` AS customers
    LEFT JOIN `elist-391320.elist.orders` AS orders
        ON customers.id = orders.customer_id
    ORDER BY 1, 2, 3
)

SELECT AVG(days_to_purchase) 
FROM days_to_purchase_cte;


--calculate the total number of orders and total sales by region and registration channel
--rank the channels by total sales, and order the dataset by this ranking to surface the top channels per region first

WITH region_orders AS (
    SELECT geo_lookup.region, 
    customers.marketing_channel,
    COUNT(DISTINCT orders.id) AS num_orders, 
    ROUND(SUM(orders.usd_price),2) AS total_sales,
    ROUND(AVG(orders.usd_price),2) AS aov
FROM `elist-391320.elist.orders` orders
LEFT JOIN `elist-391320.elist.customers` customers
    ON orders.customer_id = customers.id
LEFT JOIN elist.geo_lookup
    ON customers.country_code = geo_lookup.country
WHERE geo_lookup.region IS NOT NULL AND customers.marketing_channel IS NOT NULL
GROUP BY 1, 2
ORDER BY 1, 2
)

SELECT *, 
    ROW_NUMBER() OVER (PARTITION BY region ORDER BY num_orders DESC) AS ranking
FROM region_orders
ORDER BY 6 ASC;

-- "Best" is indicated by revenue (totals per unit). Direct indicates customers coming directly to the site, which could be because of effective SEO driving people directly to the website. 

--get customers with over 4 purchases first
WITH over_4_purchases AS (
  SELECT customer_id
  FROM `elist-391320.elist.orders`
  GROUP BY customer_id
  HAVING COUNT(id) >= 4
)
SELECT orders.customer_id, 
       orders.id, 
       orders.product_name, 
       orders.purchase_ts,
       ROW_NUMBER() OVER (PARTITION BY orders.customer_id ORDER BY orders.purchase_ts DESC) AS order_ranking
FROM `elist-391320.elist.orders` AS orders
INNER JOIN over_4_purchases ON over_4_purchases.customer_id = orders.customer_id
WHERE orders.customer_id IN (SELECT customer_id FROM over_4_purchases)
QUALIFY order_ranking = 1;


--create brand categories and filter to 2020
--count the number of refunds per month
WITH brand_refunds AS (
    SELECT
        CASE 
            WHEN LOWER(product_name) LIKE '%apple%' OR LOWER(product_name) LIKE '%macbook%' THEN 'Apple'
            WHEN LOWER(product_name) LIKE '%thinkpad%' THEN 'ThinkPad'
            WHEN LOWER(product_name) LIKE '%samsung%' THEN 'Samsung'
            WHEN LOWER(product_name) LIKE '%bose%' THEN 'Bose'
            ELSE 'Unknown'
        END AS brand,
        DATE_TRUNC(refund_ts, MONTH) AS refund_month,
        COUNT(refund_ts) AS refunds
    FROM `elist-391320.elist.orders` AS orders
    LEFT JOIN `elist-391320.elist.orders_status` AS order_status
        ON orders.id = order_status.order_id
    WHERE EXTRACT(YEAR FROM refund_ts) = 2020
    GROUP BY 1, 2
)

--select the month per brand based on the highest number of refunds
SELECT * 
FROM brand_refunds
QUALIFY ROW_NUMBER() OVER (PARTITION BY brand ORDER BY refunds DESC) = 1;

